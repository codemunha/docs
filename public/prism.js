/* PrismJS 1.17.1
https://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript+c+csharp+bash+cpp+css-extras+git+less+java+markdown+json+jsonp+json5+sql+powershell+scss+plsql+sass&plugins=line-highlight+line-numbers+toolbar+jsonp-highlight+highlight-keywords+inline-color+show-language+copy-to-clipboard */
var _self = typeof window != 'undefined' ? window : typeof WorkerGlobalScope != 'undefined' && self instanceof WorkerGlobalScope ? self : {}; var Prism = (function(u) { var c = /\blang(?:uage)?-([\w-]+)\b/i; var r = 0; var _ = { manual: u.Prism && u.Prism.manual, disableWorkerMessageHandler: u.Prism && u.Prism.disableWorkerMessageHandler, util: { encode: function(e) { return e instanceof L ? new L(e.type, _.util.encode(e.content), e.alias) : Array.isArray(e) ? e.map(_.util.encode) : e.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ') }, type: function(e) { return Object.prototype.toString.call(e).slice(8, -1) }, objId: function(e) { return e.__id || Object.defineProperty(e, '__id', { value: ++r }), e.__id }, clone: function n(e, t) { var a; var r; var i = _.util.type(e); switch (t = t || {}, i) { case 'Object':if (r = _.util.objId(e), t[r]) return t[r]; for (var o in a = {}, t[r] = a, e)e.hasOwnProperty(o) && (a[o] = n(e[o], t)); return a; case 'Array':return r = _.util.objId(e), t[r] ? t[r] : (a = [], t[r] = a, e.forEach(function(e, r) { a[r] = n(e, t) }), a); default:return e } }, currentScript: function() { if (typeof document == 'undefined') return null; if ('currentScript' in document) return document.currentScript; try { throw new Error() } catch (e) { var r = (/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(e.stack) || [])[1]; if (r) { var n = document.getElementsByTagName('script'); for (var t in n) if (n[t].src == r) return n[t] } return null } } }, languages: { extend: function(e, r) { var n = _.util.clone(_.languages[e]); for (var t in r)n[t] = r[t]; return n }, insertBefore: function(n, e, r, t) { var a = (t = t || _.languages)[n]; var i = {}; for (var o in a) if (a.hasOwnProperty(o)) { if (o == e) for (var l in r)r.hasOwnProperty(l) && (i[l] = r[l]); r.hasOwnProperty(o) || (i[o] = a[o]) } var s = t[n]; return t[n] = i, _.languages.DFS(_.languages, function(e, r) { r === s && e != n && (this[e] = i) }), i }, DFS: function e(r, n, t, a) { a = a || {}; var i = _.util.objId; for (var o in r) if (r.hasOwnProperty(o)) { n.call(r, o, r[o], t || o); var l = r[o]; var s = _.util.type(l); s !== 'Object' || a[i(l)] ? s !== 'Array' || a[i(l)] || (a[i(l)] = !0, e(l, n, o, a)) : (a[i(l)] = !0, e(l, n, null, a)) } } }, plugins: {}, highlightAll: function(e, r) { _.highlightAllUnder(document, e, r) }, highlightAllUnder: function(e, r, n) { var t = { callback: n, selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code' }; _.hooks.run('before-highlightall', t); for (var a, i = e.querySelectorAll(t.selector), o = 0; a = i[o++];)_.highlightElement(a, !0 === r, t.callback) }, highlightElement: function(e, r, n) { var t = (function(e) { for (;e && !c.test(e.className);)e = e.parentNode; return e ? (e.className.match(c) || [, 'none'])[1].toLowerCase() : 'none' }(e)); var a = _.languages[t]; e.className = e.className.replace(c, '').replace(/\s+/g, ' ') + ' language-' + t; var i = e.parentNode; i && i.nodeName.toLowerCase() === 'pre' && (i.className = i.className.replace(c, '').replace(/\s+/g, ' ') + ' language-' + t); var o = { element: e, language: t, grammar: a, code: e.textContent }; function l(e) { o.highlightedCode = e, _.hooks.run('before-insert', o), o.element.innerHTML = o.highlightedCode, _.hooks.run('after-highlight', o), _.hooks.run('complete', o), n && n.call(o.element) } if (_.hooks.run('before-sanity-check', o), !o.code) return _.hooks.run('complete', o), void (n && n.call(o.element)); if (_.hooks.run('before-highlight', o), o.grammar) if (r && u.Worker) { var s = new Worker(_.filename); s.onmessage = function(e) { l(e.data) }, s.postMessage(JSON.stringify({ language: o.language, code: o.code, immediateClose: !0 })) } else l(_.highlight(o.code, o.grammar, o.language)); else l(_.util.encode(o.code)) }, highlight: function(e, r, n) { var t = { code: e, grammar: r, language: n }; return _.hooks.run('before-tokenize', t), t.tokens = _.tokenize(t.code, t.grammar), _.hooks.run('after-tokenize', t), L.stringify(_.util.encode(t.tokens), t.language) }, matchGrammar: function(e, r, n, t, a, i, o) { for (var l in n) if (n.hasOwnProperty(l) && n[l]) { var s = n[l]; s = Array.isArray(s) ? s : [s]; for (var u = 0; u < s.length; ++u) { if (o && o == l + ',' + u) return; var c = s[u]; var g = c.inside; var f = !!c.lookbehind; var d = !!c.greedy; var h = 0; var m = c.alias; if (d && !c.pattern.global) { var p = c.pattern.toString().match(/[imsuy]*$/)[0]; c.pattern = RegExp(c.pattern.source, p + 'g') }c = c.pattern || c; for (var y = t, v = a; y < r.length; v += r[y].length, ++y) { var k = r[y]; if (r.length > e.length) return; if (!(k instanceof L)) { if (d && y != r.length - 1) { if (c.lastIndex = v, !(O = c.exec(e))) break; for (var b = O.index + (f && O[1] ? O[1].length : 0), w = O.index + O[0].length, A = y, P = v, x = r.length; A < x && (P < w || !r[A].type && !r[A - 1].greedy); ++A)(P += r[A].length) <= b && (++y, v = P); if (r[y] instanceof L) continue; S = A - y, k = e.slice(v, P), O.index -= v } else { c.lastIndex = 0; var O = c.exec(k); var S = 1 } if (O) { f && (h = O[1] ? O[1].length : 0); w = (b = O.index + h) + (O = O[0].slice(h)).length; var j = k.slice(0, b); var N = k.slice(w); var E = [y, S]; j && (++y, v += j.length, E.push(j)); var C = new L(l, g ? _.tokenize(O, g) : O, m, O, d); if (E.push(C), N && E.push(N), Array.prototype.splice.apply(r, E), S != 1 && _.matchGrammar(e, r, n, y, v, !0, l + ',' + u), i) break } else if (i) break } } } } }, tokenize: function(e, r) { var n = [e]; var t = r.rest; if (t) { for (var a in t)r[a] = t[a]; delete r.rest } return _.matchGrammar(e, n, r, 0, 0, !1), n }, hooks: { all: {}, add: function(e, r) { var n = _.hooks.all; n[e] = n[e] || [], n[e].push(r) }, run: function(e, r) { var n = _.hooks.all[e]; if (n && n.length) for (var t, a = 0; t = n[a++];)t(r) } }, Token: L }; function L(e, r, n, t, a) { this.type = e, this.content = r, this.alias = n, this.length = 0 | (t || '').length, this.greedy = !!a } if (u.Prism = _, L.stringify = function(e, r) { if (typeof e == 'string') return e; if (Array.isArray(e)) return e.map(function(e) { return L.stringify(e, r) }).join(''); var n = { type: e.type, content: L.stringify(e.content, r), tag: 'span', classes: ['token', e.type], attributes: {}, language: r }; if (e.alias) { var t = Array.isArray(e.alias) ? e.alias : [e.alias]; Array.prototype.push.apply(n.classes, t) }_.hooks.run('wrap', n); var a = Object.keys(n.attributes).map(function(e) { return e + '="' + (n.attributes[e] || '').replace(/"/g, '&quot;') + '"' }).join(' '); return '<' + n.tag + ' class="' + n.classes.join(' ') + '"' + (a ? ' ' + a : '') + '>' + n.content + '</' + n.tag + '>' }, !u.document) return u.addEventListener && (_.disableWorkerMessageHandler || u.addEventListener('message', function(e) { var r = JSON.parse(e.data); var n = r.language; var t = r.code; var a = r.immediateClose; u.postMessage(_.highlight(t, _.languages[n], n)), a && u.close() }, !1)), _; var e = _.util.currentScript(); if (e && (_.filename = e.src, e.hasAttribute('data-manual') && (_.manual = !0)), !_.manual) { function n() { _.manual || _.highlightAll() } var t = document.readyState; t === 'loading' || t === 'interactive' && e && e.defer ? document.addEventListener('DOMContentLoaded', n) : window.requestAnimationFrame ? window.requestAnimationFrame(n) : window.setTimeout(n, 16) } return _ }(_self)); typeof module != 'undefined' && module.exports && (module.exports = Prism), typeof global != 'undefined' && (global.Prism = Prism)
Prism.languages.markup = { comment: /<!--[\s\S]*?-->/, prolog: /<\?[\s\S]+?\?>/, doctype: { pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:(?!<!--)[^"'\]]|"[^"]*"|'[^']*'|<!--[\s\S]*?-->)*\]\s*)?>/i, greedy: !0 }, cdata: /<!\[CDATA\[[\s\S]*?]]>/i, tag: { pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i, greedy: !0, inside: { tag: { pattern: /^<\/?[^\s>\/]+/i, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } }, 'attr-value': { pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i, inside: { punctuation: [/^=/, { pattern: /^(\s*)["']|["']$/, lookbehind: !0 }] } }, punctuation: /\/?>/, 'attr-name': { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } } } }, entity: /&#?[\da-z]{1,8};/i }, Prism.languages.markup.tag.inside['attr-value'].inside.entity = Prism.languages.markup.entity, Prism.hooks.add('wrap', function(a) { a.type === 'entity' && (a.attributes.title = a.content.replace(/&amp;/, '&')) }), Object.defineProperty(Prism.languages.markup.tag, 'addInlined', { value: function(a, e) { var s = {}; s['language-' + e] = { pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i, lookbehind: !0, inside: Prism.languages[e] }, s.cdata = /^<!\[CDATA\[|\]\]>$/i; var n = { 'included-cdata': { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, inside: s } }; n['language-' + e] = { pattern: /[\s\S]+/, inside: Prism.languages[e] }; var t = {}; t[a] = { pattern: RegExp('(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)'.replace(/__/g, a), 'i'), lookbehind: !0, greedy: !0, inside: n }, Prism.languages.insertBefore('markup', 'cdata', t) } }), Prism.languages.xml = Prism.languages.extend('markup', {}), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup
!(function(s) { var t = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/; s.languages.css = { comment: /\/\*[\s\S]*?\*\//, atrule: { pattern: /@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/, inside: { rule: /@[\w-]+/ } }, url: { pattern: RegExp('url\\((?:' + t.source + '|[^\n\r()]*)\\)', 'i'), inside: { function: /^url/i, punctuation: /^\(|\)$/ } }, selector: RegExp("[^{}\\s](?:[^{};\"']|" + t.source + ')*?(?=\\s*\\{)'), string: { pattern: t, greedy: !0 }, property: /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i, important: /!important\b/i, function: /[-a-z0-9]+(?=\()/i, punctuation: /[(){};:,]/ }, s.languages.css.atrule.inside.rest = s.languages.css; var e = s.languages.markup; e && (e.tag.addInlined('style', 'css'), s.languages.insertBefore('inside', 'attr-value', { 'style-attr': { pattern: /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i, inside: { 'attr-name': { pattern: /^\s*style/i, inside: e.tag.inside }, punctuation: /^\s*=\s*['"]|['"]\s*$/, 'attr-value': { pattern: /.+/i, inside: s.languages.css } }, alias: 'language-css' } }, e.tag)) }(Prism))
Prism.languages.clike = { comment: [{ pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0 }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 }], string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 }, 'class-name': { pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i, lookbehind: !0, inside: { punctuation: /[.\\]/ } }, keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/, boolean: /\b(?:true|false)\b/, function: /\w+(?=\()/, number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i, operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/, punctuation: /[{}[\];(),.:]/ }
Prism.languages.javascript = Prism.languages.extend('clike', { 'class-name': [Prism.languages.clike['class-name'], { pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/, lookbehind: !0 }], keyword: [{ pattern: /((?:^|})\s*)(?:catch|finally)\b/, lookbehind: !0 }, { pattern: /(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/, lookbehind: !0 }], number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/, function: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/, operator: /--|\+\+|\*\*=?|=>|&&|\|\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?[.?]?|[~:]/ }), Prism.languages.javascript['class-name'][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/, Prism.languages.insertBefore('javascript', 'keyword', { regex: { pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*(?:$|[\r\n,.;})\]]))/, lookbehind: !0, greedy: !0 }, 'function-variable': { pattern: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/, alias: 'function' }, parameter: [{ pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/, lookbehind: !0, inside: Prism.languages.javascript }, { pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i, inside: Prism.languages.javascript }, { pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/, lookbehind: !0, inside: Prism.languages.javascript }, { pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/, lookbehind: !0, inside: Prism.languages.javascript }], constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/ }), Prism.languages.insertBefore('javascript', 'string', { 'template-string': { pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/, greedy: !0, inside: { 'template-punctuation': { pattern: /^`|`$/, alias: 'string' }, interpolation: { pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/, lookbehind: !0, inside: { 'interpolation-punctuation': { pattern: /^\${|}$/, alias: 'punctuation' }, rest: Prism.languages.javascript } }, string: /[\s\S]+/ } } }), Prism.languages.markup && Prism.languages.markup.tag.addInlined('script', 'javascript'), Prism.languages.js = Prism.languages.javascript
Prism.languages.c = Prism.languages.extend('clike', { 'class-name': { pattern: /(\b(?:enum|struct)\s+)\w+/, lookbehind: !0 }, keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/, operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/, number: /(?:\b0x(?:[\da-f]+\.?[\da-f]*|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i }), Prism.languages.insertBefore('c', 'string', { macro: { pattern: /(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im, lookbehind: !0, alias: 'property', inside: { string: { pattern: /(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/, lookbehind: !0 }, directive: { pattern: /(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/, lookbehind: !0, alias: 'keyword' } } }, constant: /\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/ }), delete Prism.languages.c.boolean
Prism.languages.csharp = Prism.languages.extend('clike', { keyword: /\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\b/, string: [{ pattern: /@("|')(?:\1\1|\\[\s\S]|(?!\1)[^\\])*\1/, greedy: !0 }, { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*?\1/, greedy: !0 }], 'class-name': [{ pattern: /\b[A-Z]\w*(?:\.\w+)*\b(?=\s+\w+)/, inside: { punctuation: /\./ } }, { pattern: /(\[)[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } }, { pattern: /(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } }, { pattern: /((?:\b(?:class|interface|new)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } }], number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)f?/i, operator: />>=?|<<=?|[-=]>|([-+&|?])\1|~|[-+*/%&|^!=<>]=?/, punctuation: /\?\.?|::|[{}[\];(),.:]/ }), Prism.languages.insertBefore('csharp', 'class-name', { 'generic-method': { pattern: /\w+\s*<[^>\r\n]+?>\s*(?=\()/, inside: { function: /^\w+/, 'class-name': { pattern: /\b[A-Z]\w*(?:\.\w+)*\b/, inside: { punctuation: /\./ } }, keyword: Prism.languages.csharp.keyword, punctuation: /[<>(),.:]/ } }, preprocessor: { pattern: /(^\s*)#.*/m, lookbehind: !0, alias: 'property', inside: { directive: { pattern: /(\s*#)\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\b/, lookbehind: !0, alias: 'keyword' } } } }), Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp
!(function(e) { var t = '\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b'; var n = { environment: { pattern: RegExp('\\$' + t), alias: 'constant' }, variable: [{ pattern: /\$?\(\([\s\S]+?\)\)/, greedy: !0, inside: { variable: [{ pattern: /(^\$\(\([\s\S]+)\)\)/, lookbehind: !0 }, /^\$\(\(/], number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/, operator: /--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/, punctuation: /\(\(?|\)\)?|,|;/ } }, { pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/, greedy: !0, inside: { variable: /^\$\(|^`|\)$|`$/ } }, { pattern: /\$\{[^}]+\}/, greedy: !0, inside: { operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/, punctuation: /[\[\]]/, environment: { pattern: RegExp('(\\{)' + t), lookbehind: !0, alias: 'constant' } } }, /\$(?:\w+|[#?*!@$])/], entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/ }; e.languages.bash = { shebang: { pattern: /^#!\s*\/.*/, alias: 'important' }, comment: { pattern: /(^|[^"{\\$])#.*/, lookbehind: !0 }, 'function-name': [{ pattern: /(\bfunction\s+)\w+(?=(?:\s*\(?:\s*\))?\s*\{)/, lookbehind: !0, alias: 'function' }, { pattern: /\b\w+(?=\s*\(\s*\)\s*\{)/, alias: 'function' }], 'for-or-select': { pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/, alias: 'variable', lookbehind: !0 }, 'assign-left': { pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/, inside: { environment: { pattern: RegExp('(^|[\\s;|&]|[<>]\\()' + t), lookbehind: !0, alias: 'constant' } }, alias: 'variable', lookbehind: !0 }, string: [{ pattern: /((?:^|[^<])<<-?\s*)(\w+?)\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\2/, lookbehind: !0, greedy: !0, inside: n }, { pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\3/, lookbehind: !0, greedy: !0 }, { pattern: /(["'])(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\1)[^\\])*\1/, greedy: !0, inside: n }], environment: { pattern: RegExp('\\$?' + t), alias: 'constant' }, variable: n.variable, function: { pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/, lookbehind: !0 }, keyword: { pattern: /(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/, lookbehind: !0 }, builtin: { pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/, lookbehind: !0, alias: 'class-name' }, boolean: { pattern: /(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/, lookbehind: !0 }, 'file-descriptor': { pattern: /\B&\d\b/, alias: 'important' }, operator: { pattern: /\d?<>|>\||\+=|==?|!=?|=~|<<[<-]?|[&\d]?>>|\d?[<>]&?|&[>&]?|\|[&|]?|<=?|>=?/, inside: { 'file-descriptor': { pattern: /^\d/, alias: 'important' } } }, punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/, number: { pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/, lookbehind: !0 } }; for (var a = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'], r = n.variable[1].inside, s = 0; s < a.length; s++)r[a[s]] = e.languages.bash[a[s]]; e.languages.shell = e.languages.bash }(Prism))
Prism.languages.cpp = Prism.languages.extend('c', { 'class-name': { pattern: /(\b(?:class|enum|struct)\s+)\w+/, lookbehind: !0 }, keyword: /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/, number: { pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+\.?[\da-f']*|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+\.?[\d']*|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]*/i, greedy: !0 }, operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/, boolean: /\b(?:true|false)\b/ }), Prism.languages.insertBefore('cpp', 'string', { 'raw-string': { pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/, alias: 'string', greedy: !0 } })
!(function(e) { e.languages.css.selector = { pattern: e.languages.css.selector, inside: { 'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/, 'pseudo-class': /:[-\w]+/, class: /\.[-:.\w]+/, id: /#[-:.\w]+/, attribute: { pattern: /\[(?:[^[\]"']|("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1)*\]/, greedy: !0, inside: { punctuation: /^\[|\]$/, 'case-sensitivity': { pattern: /(\s)[si]$/i, lookbehind: !0, alias: 'keyword' }, namespace: { pattern: /^(\s*)[-*\w\xA0-\uFFFF]*\|(?!=)/, lookbehind: !0, inside: { punctuation: /\|$/ } }, attribute: { pattern: /^(\s*)[-\w\xA0-\uFFFF]+/, lookbehind: !0 }, value: [/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, { pattern: /(=\s*)[-\w\xA0-\uFFFF]+(?=\s*$)/, lookbehind: !0 }], operator: /[|~*^$]?=/ } }, 'n-th': [{ pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/, lookbehind: !0, inside: { number: /[\dn]+/, operator: /[+-]/ } }, { pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i, lookbehind: !0 }], punctuation: /[()]/ } }, e.languages.insertBefore('css', 'property', { variable: { pattern: /(^|[^-\w\xA0-\uFFFF])--[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*/i, lookbehind: !0 } }); var a = { pattern: /(\d)(?:%|[a-z]+)/, lookbehind: !0 }; var n = { pattern: /(^|[^\w.-])-?\d*\.?\d+/, lookbehind: !0 }; e.languages.insertBefore('css', 'function', { operator: { pattern: /(\s)[+\-*\/](?=\s)/, lookbehind: !0 }, hexcode: { pattern: /\B#(?:[\da-f]{1,2}){3,4}\b/i, alias: 'color' }, color: [/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i, { pattern: /\b(?:rgb|hsl)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:rgb|hsl)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i, inside: { unit: a, number: n, function: /[\w-]+(?=\()/, punctuation: /[(),]/ } }], entity: /\\[\da-f]{1,8}/i, unit: a, number: n }) }(Prism))
Prism.languages.git = { comment: /^#.*/m, deleted: /^[-–].*/m, inserted: /^\+.*/m, string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m, command: { pattern: /^.*\$ git .*$/m, inside: { parameter: /\s--?\w+/m } }, coord: /^@@.*@@$/m, commit_sha1: /^commit \w{40}$/m }
Prism.languages.less = Prism.languages.extend('css', { comment: [/\/\*[\s\S]*?\*\//, { pattern: /(^|[^\\])\/\/.*/, lookbehind: !0 }], atrule: { pattern: /@[\w-]+?(?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};])*?(?=\s*\{)/, inside: { punctuation: /[:()]/ } }, selector: { pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@])*?(?=\s*\{)/, inside: { variable: /@+[\w-]+/ } }, property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i, operator: /[+\-*\/]/ }), Prism.languages.insertBefore('less', 'property', { variable: [{ pattern: /@[\w-]+\s*:/, inside: { punctuation: /:/ } }, /@@?[\w-]+/], 'mixin-usage': { pattern: /([{;]\s*)[.#](?!\d)[\w-]+.*?(?=[(;])/, lookbehind: !0, alias: 'function' } })
!(function(e) { var t = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|null|open|opens|package|private|protected|provides|public|requires|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/; var a = /\b[A-Z](?:\w*[a-z]\w*)?\b/; e.languages.java = e.languages.extend('clike', { 'class-name': [a, /\b[A-Z]\w*(?=\s+\w+\s*[;,=())])/], keyword: t, function: [e.languages.clike.function, { pattern: /(\:\:)[a-z_]\w*/, lookbehind: !0 }], number: /\b0b[01][01_]*L?\b|\b0x[\da-f_]*\.?[\da-f_p+-]+\b|(?:\b\d[\d_]*\.?[\d_]*|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i, operator: { pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m, lookbehind: !0 } }), e.languages.insertBefore('java', 'string', { 'triple-quoted-string': { pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/, greedy: !0, alias: 'string' } }), e.languages.insertBefore('java', 'class-name', { annotation: { alias: 'punctuation', pattern: /(^|[^.])@\w+/, lookbehind: !0 }, namespace: { pattern: /(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)[a-z]\w*(?:\.[a-z]\w*)+/, lookbehind: !0, inside: { punctuation: /\./ } }, generics: { pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/, inside: { 'class-name': a, keyword: t, punctuation: /[<>(),.:]/, operator: /[?&|]/ } } }) }(Prism))
!(function(d) { function n(n, e) { return n = n.replace(/<inner>/g, '(?:\\\\.|[^\\\\\\n\r]|(?:\r?\n|\r)(?!\r?\n|\r))'), e && (n = n + '|' + n.replace(/_/g, '\\*')), RegExp('((?:^|[^\\\\])(?:\\\\{2})*)(?:' + n + ')') } var e = '(?:\\\\.|``.+?``|`[^`\r\\n]+`|[^\\\\|\r\\n`])+'; var t = '\\|?__(?:\\|__)+\\|?(?:(?:\r?\n|\r)|$)'.replace(/__/g, e); var a = '\\|?[ \t]*:?-{3,}:?[ \t]*(?:\\|[ \t]*:?-{3,}:?[ \t]*)+\\|?(?:\r?\n|\r)'; d.languages.markdown = d.languages.extend('markup', {}), d.languages.insertBefore('markdown', 'prolog', { blockquote: { pattern: /^>(?:[\t ]*>)*/m, alias: 'punctuation' }, table: { pattern: RegExp('^' + t + a + '(?:' + t + ')*', 'm'), inside: { 'table-data-rows': { pattern: RegExp('^(' + t + a + ')(?:' + t + ')*$'), lookbehind: !0, inside: { 'table-data': { pattern: RegExp(e), inside: d.languages.markdown }, punctuation: /\|/ } }, 'table-line': { pattern: RegExp('^(' + t + ')' + a + '$'), lookbehind: !0, inside: { punctuation: /\||:?-{3,}:?/ } }, 'table-header-row': { pattern: RegExp('^' + t + '$'), inside: { 'table-header': { pattern: RegExp(e), alias: 'important', inside: d.languages.markdown }, punctuation: /\|/ } } } }, code: [{ pattern: /(^[ \t]*(?:\r?\n|\r))(?: {4}|\t).+(?:(?:\r?\n|\r)(?: {4}|\t).+)*/m, lookbehind: !0, alias: 'keyword' }, { pattern: /``.+?``|`[^`\r\n]+`/, alias: 'keyword' }, { pattern: /^```[\s\S]*?^```$/m, greedy: !0, inside: { 'code-block': { pattern: /^(```.*(?:\r?\n|\r))[\s\S]+?(?=(?:\r?\n|\r)^```$)/m, lookbehind: !0 }, 'code-language': { pattern: /^(```).+/, lookbehind: !0 }, punctuation: /```/ } }], title: [{ pattern: /\S.*(?:\r?\n|\r)(?:==+|--+)(?=[ \t]*$)/m, alias: 'important', inside: { punctuation: /==+$|--+$/ } }, { pattern: /(^\s*)#+.+/m, lookbehind: !0, alias: 'important', inside: { punctuation: /^#+|#+$/ } }], hr: { pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m, lookbehind: !0, alias: 'punctuation' }, list: { pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m, lookbehind: !0, alias: 'punctuation' }, 'url-reference': { pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/, inside: { variable: { pattern: /^(!?\[)[^\]]+/, lookbehind: !0 }, string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/, punctuation: /^[\[\]!:]|[<>]/ }, alias: 'url' }, bold: { pattern: n('__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__', !0), lookbehind: !0, greedy: !0, inside: { content: { pattern: /(^..)[\s\S]+(?=..$)/, lookbehind: !0, inside: {} }, punctuation: /\*\*|__/ } }, italic: { pattern: n('_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_', !0), lookbehind: !0, greedy: !0, inside: { content: { pattern: /(^.)[\s\S]+(?=.$)/, lookbehind: !0, inside: {} }, punctuation: /[*_]/ } }, strike: { pattern: n('(~~?)(?:(?!~)<inner>)+?\\2', !1), lookbehind: !0, greedy: !0, inside: { content: { pattern: /(^~~?)[\s\S]+(?=\1$)/, lookbehind: !0, inside: {} }, punctuation: /~~?/ } }, url: { pattern: n('!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\t ]+"(?:\\\\.|[^"\\\\])*")?\\)| ?\\[(?:(?!\\])<inner>)+\\])', !1), lookbehind: !0, greedy: !0, inside: { variable: { pattern: /(\[)[^\]]+(?=\]$)/, lookbehind: !0 }, content: { pattern: /(^!?\[)[^\]]+(?=\])/, lookbehind: !0, inside: {} }, string: { pattern: /"(?:\\.|[^"\\])*"(?=\)$)/ } } } }), ['url', 'bold', 'italic', 'strike'].forEach(function(e) { ['url', 'bold', 'italic', 'strike'].forEach(function(n) { e !== n && (d.languages.markdown[e].inside.content.inside[n] = d.languages.markdown[n]) }) }), d.hooks.add('after-tokenize', function(n) { n.language !== 'markdown' && n.language !== 'md' || !(function n(e) { if (e && typeof e != 'string') for (var t = 0, a = e.length; t < a; t++) { var i = e[t]; if (i.type === 'code') { var r = i.content[1]; var o = i.content[3]; if (r && o && r.type === 'code-language' && o.type === 'code-block' && typeof r.content == 'string') { var l = 'language-' + r.content.trim().split(/\s+/)[0].toLowerCase(); o.alias ? typeof o.alias == 'string' ? o.alias = [o.alias, l] : o.alias.push(l) : o.alias = [l] } } else n(i.content) } }(n.tokens)) }), d.hooks.add('wrap', function(n) { if (n.type === 'code-block') { for (var e = '', t = 0, a = n.classes.length; t < a; t++) { var i = n.classes[t]; var r = /language-(.+)/.exec(i); if (r) { e = r[1]; break } } var o = d.languages[e]; if (o) { var l = n.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&'); n.content = d.highlight(l, o, e) } else if (e && e !== 'none' && d.plugins.autoloader) { var s = 'md-' + (new Date()).valueOf() + '-' + Math.floor(1e16 * Math.random()); n.attributes.id = s, d.plugins.autoloader.loadLanguages(e, function() { var n = document.getElementById(s); n && (n.innerHTML = d.highlight(n.textContent, d.languages[e], e)) }) } } }), d.languages.md = d.languages.markdown }(Prism))
Prism.languages.json = { property: { pattern: /"(?:\\.|[^\\"\r\n])*"(?=\s*:)/, greedy: !0 }, string: { pattern: /"(?:\\.|[^\\"\r\n])*"(?!\s*:)/, greedy: !0 }, comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/, number: /-?\d+\.?\d*(?:e[+-]?\d+)?/i, punctuation: /[{}[\],]/, operator: /:/, boolean: /\b(?:true|false)\b/, null: { pattern: /\bnull\b/, alias: 'keyword' } }
Prism.languages.jsonp = Prism.languages.extend('json', { punctuation: /[{}[\]();,.]/ }), Prism.languages.insertBefore('jsonp', 'punctuation', { function: /[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\()/ })
!(function(n) { var e = /("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/; n.languages.json5 = n.languages.extend('json', { property: [{ pattern: RegExp(e.source + '(?=\\s*:)'), greedy: !0 }, { pattern: /[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*:)/, alias: 'unquoted' }], string: { pattern: e, greedy: !0 }, number: /[+-]?(?:NaN|Infinity|0x[a-fA-F\d]+|(?:\d+\.?\d*|\.\d+)(?:[eE][+-]?\d+)?)/ }) }(Prism))
Prism.languages.sql = { comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/, lookbehind: !0 }, variable: [{ pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/, greedy: !0 }, /@[\w.$]+/], string: { pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/, greedy: !0, lookbehind: !0 }, function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i, keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i, boolean: /\b(?:TRUE|FALSE|NULL)\b/i, number: /\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i, operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i, punctuation: /[;[\]()`,.]/ }
!(function(e) { var t = Prism.languages.powershell = { comment: [{ pattern: /(^|[^`])<#[\s\S]*?#>/, lookbehind: !0 }, { pattern: /(^|[^`])#.*/, lookbehind: !0 }], string: [{ pattern: /"(?:`[\s\S]|[^`"])*"/, greedy: !0, inside: { function: { pattern: /(^|[^`])\$\((?:\$\(.*?\)|(?!\$\()[^\r\n)])*\)/, lookbehind: !0, inside: {} } } }, { pattern: /'(?:[^']|'')*'/, greedy: !0 }], namespace: /\[[a-z](?:\[(?:\[[^\]]*]|[^\[\]])*]|[^\[\]])*]/i, boolean: /\$(?:true|false)\b/i, variable: /\$\w+\b/i, function: [/\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\b/i, /\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i], keyword: /\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i, operator: { pattern: /(\W?)(?:!|-(?:eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\b|-[-=]?|\+[+=]?|[*\/%]=?)/i, lookbehind: !0 }, punctuation: /[|{}[\];(),.]/ }; var o = t.string[0].inside; o.boolean = t.boolean, o.variable = t.variable, o.function.inside = t }())
Prism.languages.scss = Prism.languages.extend('css', { comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/, lookbehind: !0 }, atrule: { pattern: /@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/, inside: { rule: /@[\w-]+/ } }, url: /(?:[-a-z]+-)?url(?=\()/i, selector: { pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()]|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m, inside: { parent: { pattern: /&/, alias: 'important' }, placeholder: /%[-\w]+/, variable: /\$[-\w]+|#\{\$[-\w]+\}/ } }, property: { pattern: /(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/, inside: { variable: /\$[-\w]+|#\{\$[-\w]+\}/ } } }), Prism.languages.insertBefore('scss', 'atrule', { keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, { pattern: /( +)(?:from|through)(?= )/, lookbehind: !0 }] }), Prism.languages.insertBefore('scss', 'important', { variable: /\$[-\w]+|#\{\$[-\w]+\}/ }), Prism.languages.insertBefore('scss', 'function', { placeholder: { pattern: /%[-\w]+/, alias: 'selector' }, statement: { pattern: /\B!(?:default|optional)\b/i, alias: 'keyword' }, boolean: /\b(?:true|false)\b/, null: { pattern: /\bnull\b/, alias: 'keyword' }, operator: { pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/, lookbehind: !0 } }), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss
!(function(E) { var A = E.languages.plsql = E.languages.extend('sql', { comment: [/\/\*[\s\S]*?\*\//, /--.*/] }); var T = A.keyword; Array.isArray(T) || (T = A.keyword = [T]), T.unshift(/\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\b/i); var R = A.operator; Array.isArray(R) || (R = A.operator = [R]), R.unshift(/:=/) }(Prism))
!(function(e) { e.languages.sass = e.languages.extend('css', { comment: { pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m, lookbehind: !0 } }), e.languages.insertBefore('sass', 'atrule', { 'atrule-line': { pattern: /^(?:[ \t]*)[@+=].+/m, inside: { atrule: /(?:@[\w-]+|[+=])/m } } }), delete e.languages.sass.atrule; var t = /\$[-\w]+|#\{\$[-\w]+\}/; var a = [/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/, { pattern: /(\s+)-(?=\s)/, lookbehind: !0 }]; e.languages.insertBefore('sass', 'property', { 'variable-line': { pattern: /^[ \t]*\$.+/m, inside: { punctuation: /:/, variable: t, operator: a } }, 'property-line': { pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m, inside: { property: [/[^:\s]+(?=\s*:)/, { pattern: /(:)[^:\s]+/, lookbehind: !0 }], punctuation: /:/, variable: t, operator: a, important: e.languages.sass.important } } }), delete e.languages.sass.property, delete e.languages.sass.important, e.languages.insertBefore('sass', 'punctuation', { selector: { pattern: /([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/, lookbehind: !0 } }) }(Prism))
!(function() { if (typeof self != 'undefined' && self.Prism && self.document && document.querySelector) { var t; var n = function() { if (void 0 === t) { var e = document.createElement('div'); e.style.fontSize = '13px', e.style.lineHeight = '1.5', e.style.padding = 0, e.style.border = 0, e.innerHTML = '&nbsp;<br />&nbsp;', document.body.appendChild(e), t = e.offsetHeight === 38, document.body.removeChild(e) } return t }; var a = 0; Prism.hooks.add('before-sanity-check', function(e) { var t = e.element.parentNode; var n = t && t.getAttribute('data-line'); if (t && n && /pre/i.test(t.nodeName)) { var i = 0; r('.line-highlight', t).forEach(function(e) { i += e.textContent.length, e.parentNode.removeChild(e) }), i && /^( \n)+$/.test(e.code.slice(-i)) && (e.code = e.code.slice(0, -i)) } }), Prism.hooks.add('complete', function e(t) { var n = t.element.parentNode; var i = n && n.getAttribute('data-line'); if (n && i && /pre/i.test(n.nodeName)) { clearTimeout(a); var r = Prism.plugins.lineNumbers; var o = t.plugins && t.plugins.lineNumbers; if (l(n, 'line-numbers') && r && !o)Prism.hooks.add('line-numbers', e); else s(n, i)(), a = setTimeout(u, 1) } }), window.addEventListener('hashchange', u), window.addEventListener('resize', function() { var t = []; r('pre[data-line]').forEach(function(e) { t.push(s(e)) }), t.forEach(i) }) } function r(e, t) { return Array.prototype.slice.call((t || document).querySelectorAll(e)) } function l(e, t) { return t = ' ' + t + ' ', (' ' + e.className + ' ').replace(/[\n\t]/g, ' ').indexOf(t) > -1 } function i(e) { e() } function s(u, e, d) { var t = (e = typeof e == 'string' ? e : u.getAttribute('data-line')).replace(/\s+/g, '').split(','); var c = +u.getAttribute('data-line-offset') || 0; var f = (n() ? parseInt : parseFloat)(getComputedStyle(u).lineHeight); var h = l(u, 'line-numbers'); var p = h ? u : u.querySelector('code') || u; var m = []; return t.forEach(function(e) { var t = e.split('-'); var n = +t[0]; var i = +t[1] || n; var r = u.querySelector('.line-highlight[data-range="' + e + '"]') || document.createElement('div'); if (m.push(function() { r.setAttribute('aria-hidden', 'true'), r.setAttribute('data-range', e), r.className = (d || '') + ' line-highlight' }), h && Prism.plugins.lineNumbers) { var o = Prism.plugins.lineNumbers.getLine(u, n); var a = Prism.plugins.lineNumbers.getLine(u, i); if (o) { var l = o.offsetTop + 'px'; m.push(function() { r.style.top = l }) } if (a) { var s = a.offsetTop - o.offsetTop + a.offsetHeight + 'px'; m.push(function() { r.style.height = s }) } } else m.push(function() { r.setAttribute('data-start', n), n < i && r.setAttribute('data-end', i), r.style.top = (n - c - 1) * f + 'px', r.textContent = new Array(i - n + 2).join(' \n') }); m.push(function() { p.appendChild(r) }) }), function() { m.forEach(i) } } function u() { var e = location.hash.slice(1); r('.temporary.line-highlight').forEach(function(e) { e.parentNode.removeChild(e) }); var t = (e.match(/\.([\d,-]+)$/) || [, ''])[1]; if (t && !document.getElementById(e)) { var n = e.slice(0, e.lastIndexOf('.')); var i = document.getElementById(n); if (i)i.hasAttribute('data-line') || i.setAttribute('data-line', ''), s(i, t, 'temporary ')(), document.querySelector('.temporary.line-highlight').scrollIntoView() } } }())
!(function() { if (typeof self != 'undefined' && self.Prism && self.document) { var l = 'line-numbers'; var c = /\n(?!$)/g; var m = function(e) { var t = a(e)['white-space']; if (t === 'pre-wrap' || t === 'pre-line') { var n = e.querySelector('code'); var r = e.querySelector('.line-numbers-rows'); var s = e.querySelector('.line-numbers-sizer'); var i = n.textContent.split(c); s || ((s = document.createElement('span')).className = 'line-numbers-sizer', n.appendChild(s)), s.style.display = 'block', i.forEach(function(e, t) { s.textContent = e || '\n'; var n = s.getBoundingClientRect().height; r.children[t].style.height = n + 'px' }), s.textContent = '', s.style.display = 'none' } }; var a = function(e) { return e ? window.getComputedStyle ? getComputedStyle(e) : e.currentStyle || null : null }; window.addEventListener('resize', function() { Array.prototype.forEach.call(document.querySelectorAll('pre.' + l), m) }), Prism.hooks.add('complete', function(e) { if (e.code) { var t = e.element; var n = t.parentNode; if (n && /pre/i.test(n.nodeName) && !t.querySelector('.line-numbers-rows')) { for (var r = !1, s = /(?:^|\s)line-numbers(?:\s|$)/, i = t; i; i = i.parentNode) if (s.test(i.className)) { r = !0; break } if (r) { t.className = t.className.replace(s, ' '), s.test(n.className) || (n.className += ' line-numbers'); var l; var a = e.code.match(c); var o = a ? a.length + 1 : 1; var u = new Array(o + 1).join('<span></span>'); (l = document.createElement('span')).setAttribute('aria-hidden', 'true'), l.className = 'line-numbers-rows', l.innerHTML = u, n.hasAttribute('data-start') && (n.style.counterReset = 'linenumber ' + (parseInt(n.getAttribute('data-start'), 10) - 1)), e.element.appendChild(l), m(n), Prism.hooks.run('line-numbers', e) } } } }), Prism.hooks.add('line-numbers', function(e) { e.plugins = e.plugins || {}, e.plugins.lineNumbers = !0 }), Prism.plugins.lineNumbers = { getLine: function(e, t) { if (e.tagName === 'PRE' && e.classList.contains(l)) { var n = e.querySelector('.line-numbers-rows'); var r = parseInt(e.getAttribute('data-start'), 10) || 1; var s = r + (n.children.length - 1); t < r && (t = r), s < t && (t = s); var i = t - r; return n.children[i] } } } } }())
!(function() { if (typeof self != 'undefined' && self.Prism && self.document) { var r = []; var i = {}; var a = function() {}; Prism.plugins.toolbar = {}; var t = Prism.plugins.toolbar.registerButton = function(t, a) { var e; e = typeof a == 'function' ? a : function(t) { var e; return typeof a.onClick == 'function' ? ((e = document.createElement('button')).type = 'button', e.addEventListener('click', function() { a.onClick.call(this, t) })) : typeof a.url == 'string' ? (e = document.createElement('a')).href = a.url : e = document.createElement('span'), a.className && e.classList.add(a.className), e.textContent = a.text, e }, t in i ? console.warn('There is a button with the key "' + t + '" registered already.') : r.push(i[t] = e) }; var e = Prism.plugins.toolbar.hook = function(n) { var t = n.element.parentNode; if (t && /pre/i.test(t.nodeName) && !t.parentNode.classList.contains('code-toolbar')) { var e = document.createElement('div'); e.classList.add('code-toolbar'), t.parentNode.insertBefore(e, t), e.appendChild(t); var o = document.createElement('div'); o.classList.add('toolbar'), document.body.hasAttribute('data-toolbar-order') && (r = document.body.getAttribute('data-toolbar-order').split(',').map(function(t) { return i[t] || a })), r.forEach(function(t) { var e = t(n); if (e) { var a = document.createElement('div'); a.classList.add('toolbar-item'), a.appendChild(e), o.appendChild(a) } }), e.appendChild(o) } }; t('label', function(t) { var e = t.element.parentNode; if (e && /pre/i.test(e.nodeName) && e.hasAttribute('data-label')) { var a; var n; var o = e.getAttribute('data-label'); try { n = document.querySelector('template#' + o) } catch (t) {} return n ? a = n.content : (e.hasAttribute('data-url') ? (a = document.createElement('a')).href = e.getAttribute('data-url') : a = document.createElement('span'), a.textContent = o), a } }), Prism.hooks.add('complete', e) } }())
!(function() { if (self.Prism && self.document && document.querySelectorAll && [].filter) { var d = []; t(function(t, e) { if (t && t.meta && t.data) { if (t.meta.status && t.meta.status >= 400) return 'Error: ' + (t.data.message || t.meta.status); if (typeof t.data.content == 'string') return typeof atob == 'function' ? atob(t.data.content.replace(/\s/g, '')) : 'Your browser cannot decode base64' } return null }, 'github'), t(function(t, e) { if (t && t.meta && t.data && t.data.files) { if (t.meta.status && t.meta.status >= 400) return 'Error: ' + (t.data.message || t.meta.status); var n = t.data.files; var a = e.getAttribute('data-filename'); if (a == null) for (var r in n) if (n.hasOwnProperty(r)) { a = r; break } return void 0 !== n[a] ? n[a].content : 'Error: unknown or missing gist file ' + a } return null }, 'gist'), t(function(t, e) { return t && t.node && typeof t.data == 'string' ? t.data : null }, 'bitbucket'); var s = 0; var l = 'Loading…'; Prism.plugins.jsonphighlight = { registerAdapter: t, removeAdapter: function(t) { if (typeof t == 'string' && (t = n(t)), typeof t == 'function') { var e = d.map(function(t) { return t.adapter }).indexOf(t); e >= 0 && d.splice(e, 1) } }, highlight: e }, e() } function t(t, e) { e = e || t.name, typeof t != 'function' || n(t) || n(e) || d.push({ adapter: t, name: e }) } function n(t) { if (typeof t == 'function') { for (var e = 0; n = d[e++];) if (n.adapter.valueOf() === t.valueOf()) return n.adapter } else if (typeof t == 'string') { var n; for (e = 0; n = d[e++];) if (n.name === t) return n.adapter } return null } function e() { Array.prototype.slice.call(document.querySelectorAll('pre[data-jsonp]')).forEach(function(a) { a.textContent = ''; var r = document.createElement('code'); r.textContent = l, a.appendChild(r); var t = a.getAttribute('data-adapter'); var o = null; if (t) { if (typeof window[t] != 'function') return void (r.textContent = "JSONP adapter function '" + t + "' doesn't exist"); o = window[t] } var i = 'prismjsonp' + s++; var e = document.createElement('a'); var n = e.href = a.getAttribute('data-jsonp'); e.href += (e.search ? '&' : '?') + (a.getAttribute('data-callback') || 'callback') + '=' + i; var u = setTimeout(function() { r.textContent === l && (r.textContent = "Timeout loading '" + n + "'") }, 5e3); var f = document.createElement('script'); f.src = e.href, window[i] = function(t) { document.head.removeChild(f), clearTimeout(u), delete window[i]; var e = ''; if (o)e = o(t, a); else for (var n in d) if ((e = d[n].adapter(t, a)) !== null) break; e === null ? r.textContent = 'Cannot parse response (perhaps you need an adapter function?)' : (r.textContent = e, Prism.highlightElement(r)) }, document.head.appendChild(f) }) } }())
typeof self != 'undefined' && !self.Prism || typeof global != 'undefined' && !global.Prism || Prism.hooks.add('wrap', function(e) { e.type === 'keyword' && e.classes.push('keyword-' + e.content) })
!(function() { if (typeof self != 'undefined' && typeof Prism != 'undefined' && typeof document != 'undefined') { var i = /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/g; var t = /^#?(?=(?:[\da-f]{1,2}){3,4}$)([\da-f][\da-f]?)([\da-f][\da-f]?)([\da-f][\da-f]?)([\da-f][\da-f]?)?$/i; var d = [function(n) { var e = t.exec(n); if (e) { var o = n.length <= 4 ? 1 / 15 : 1 / 255; return 'rgba(' + e.slice(1, 4).map(function(n) { return String(Math.round(parseInt(n, 16) * o * 255)) }).join(',') + ',' + (void 0 === e[4] ? '1' : (parseInt(e[4], 16) * o).toFixed(3)) + ')' } }, function(n) { var e = (new Option()).style; return e.color = n, e.color ? n : void 0 }]; Prism.hooks.add('wrap', function(n) { if (n.type === 'color' || n.type === 'hexcode') { for (var e, o = n.content, t = o.split(i).join(''), r = 0, a = d.length; r < a && !e; r++)e = d[r](t); if (!e) return; var f = '<span class="inline-color" style="background-color:' + e + ';"></span>'; n.content = f + o } }) } }())
!(function() { if (typeof self != 'undefined' && self.Prism && self.document) if (Prism.plugins.toolbar) { var r = { html: 'HTML', xml: 'XML', svg: 'SVG', mathml: 'MathML', css: 'CSS', clike: 'C-like', js: 'JavaScript', abap: 'ABAP', abnf: 'Augmented Backus–Naur form', antlr4: 'ANTLR4', g4: 'ANTLR4', apacheconf: 'Apache Configuration', apl: 'APL', aql: 'AQL', arff: 'ARFF', asciidoc: 'AsciiDoc', adoc: 'AsciiDoc', asm6502: '6502 Assembly', aspnet: 'ASP.NET (C#)', autohotkey: 'AutoHotkey', autoit: 'AutoIt', shell: 'Bash', basic: 'BASIC', bbcode: 'BBcode', bnf: 'Backus–Naur form', rbnf: 'Routing Backus–Naur form', csharp: 'C#', cs: 'C#', dotnet: 'C#', cpp: 'C++', cil: 'CIL', coffee: 'CoffeeScript', cmake: 'CMake', csp: 'Content-Security-Policy', 'css-extras': 'CSS Extras', django: 'Django/Jinja2', jinja2: 'Django/Jinja2', 'dns-zone-file': 'DNS zone file', 'dns-zone': 'DNS zone file', dockerfile: 'Docker', ebnf: 'Extended Backus–Naur form', ejs: 'EJS', etlua: 'Embedded Lua templating', erb: 'ERB', fsharp: 'F#', 'firestore-security-rules': 'Firestore security rules', ftl: 'FreeMarker Template Language', gcode: 'G-code', gdscript: 'GDScript', gedcom: 'GEDCOM', glsl: 'GLSL', gml: 'GameMaker Language', gamemakerlanguage: 'GameMaker Language', graphql: 'GraphQL', hs: 'Haskell', hcl: 'HCL', http: 'HTTP', hpkp: 'HTTP Public-Key-Pins', hsts: 'HTTP Strict-Transport-Security', ichigojam: 'IchigoJam', inform7: 'Inform 7', javadoc: 'JavaDoc', javadoclike: 'JavaDoc-like', javastacktrace: 'Java stack trace', jq: 'JQ', jsdoc: 'JSDoc', 'js-extras': 'JS Extras', 'js-templates': 'JS Templates', json: 'JSON', jsonp: 'JSONP', json5: 'JSON5', latex: 'LaTeX', tex: 'TeX', context: 'ConTeXt', lilypond: 'LilyPond', ly: 'LilyPond', emacs: 'Lisp', elisp: 'Lisp', 'emacs-lisp': 'Lisp', lolcode: 'LOLCODE', md: 'Markdown', 'markup-templating': 'Markup templating', matlab: 'MATLAB', mel: 'MEL', moon: 'MoonScript', n1ql: 'N1QL', n4js: 'N4JS', n4jsd: 'N4JS', 'nand2tetris-hdl': 'Nand To Tetris HDL', nasm: 'NASM', nginx: 'nginx', nsis: 'NSIS', objectivec: 'Objective-C', ocaml: 'OCaml', opencl: 'OpenCL', parigp: 'PARI/GP', objectpascal: 'Object Pascal', pcaxis: 'PC-Axis', px: 'PC-Axis', php: 'PHP', phpdoc: 'PHPDoc', 'php-extras': 'PHP Extras', plsql: 'PL/SQL', powershell: 'PowerShell', properties: '.properties', protobuf: 'Protocol Buffers', py: 'Python', q: 'Q (kdb+ database)', jsx: 'React JSX', tsx: 'React TSX', renpy: "Ren'py", rest: 'reST (reStructuredText)', 'robot-framework': 'Robot Framework', robot: 'Robot Framework', rb: 'Ruby', sas: 'SAS', sass: 'Sass (Sass)', scss: 'Sass (Scss)', 'shell-session': 'Shell session', solidity: 'Solidity (Ethereum)', soy: 'Soy (Closure Template)', sparql: 'SPARQL', rq: 'SPARQL', 'splunk-spl': 'Splunk SPL', sqf: 'SQF: Status Quo Function (Arma 3)', sql: 'SQL', tap: 'TAP', toml: 'TOML', tt2: 'Template Toolkit 2', trig: 'TriG', ts: 'TypeScript', 't4-cs': 'T4 Text Templates (C#)', t4: 'T4 Text Templates (C#)', 't4-vb': 'T4 Text Templates (VB)', 't4-templating': 'T4 templating', vbnet: 'VB.Net', vhdl: 'VHDL', vim: 'vim', 'visual-basic': 'Visual Basic', vb: 'Visual Basic', wasm: 'WebAssembly', wiki: 'Wiki markup', xeoracube: 'XeoraCube', xojo: 'Xojo (REALbasic)', xquery: 'XQuery', yaml: 'YAML', yml: 'YAML' }; Prism.plugins.toolbar.registerButton('show-language', function(e) { var a = e.element.parentNode; if (a && /pre/i.test(a.nodeName)) { var s; var t = a.getAttribute('data-language') || r[e.language] || ((s = e.language) ? (s.substring(0, 1).toUpperCase() + s.substring(1)).replace(/s(?=cript)/, 'S') : s); if (t) { var o = document.createElement('span'); return o.textContent = t, o } } }) } else console.warn('Show Languages plugin loaded before Toolbar plugin.') }())
!(function() { if (typeof self != 'undefined' && self.Prism && self.document) if (Prism.plugins.toolbar) { var r = window.ClipboardJS || void 0; r || typeof require != 'function' || (r = require('clipboard')); var i = []; if (!r) { var o = document.createElement('script'); var e = document.querySelector('head'); o.onload = function() { if (r = window.ClipboardJS) for (;i.length;)i.pop()() }, o.src = 'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js', e.appendChild(o) }Prism.plugins.toolbar.registerButton('copy-to-clipboard', function(e) { var t = document.createElement('button'); return t.textContent = 'Copy', r ? o() : i.push(o), t; function o() { var o = new r(t, { text: function() { return e.code } }); o.on('success', function() { t.textContent = 'Copied!', n() }), o.on('error', function() { t.textContent = 'Press Ctrl+C to copy', n() }) } function n() { setTimeout(function() { t.textContent = 'Copy' }, 5e3) } }) } else console.warn('Copy to Clipboard plugin loaded before Toolbar plugin.') }())
